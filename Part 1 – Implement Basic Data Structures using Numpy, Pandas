{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOAYiT6YFscX/G30iAUNya+",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ashmithareddy20/23CSBTB39-40/blob/main/Part%201%20%E2%80%93%20Implement%20Basic%20Data%20Structures%20using%20Numpy%2C%20Pandas\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aP6A91qc8g_0",
        "outputId": "aadbd8d3-5160-4be9-b444-25c057c4b33b"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "array1 :  [1 2 3 4 5]\n",
            "array2 :  [ 6  7  8  9 10]\n"
          ]
        }
      ],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "array1=np.array([1,2,3,4,5])\n",
        "array2=np.array([6,7,8,9,10])\n",
        "print(\"array1 : \",array1)\n",
        "print(\"array2 : \",array2)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "# Creating a list\n",
        "list1 = [1, 2, 3, 4, 5]\n",
        "print(\"List:\", list1)\n",
        "print(\"Type of list1:\", type(list1))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tMG0Tb3nBCvs",
        "outputId": "e801d9fe-e6e7-4bc0-d369-51ad544dda22"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "List: [1, 2, 3, 4, 5]\n",
            "Type of list1: <class 'list'>\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Creating another array for operations\n",
        "array2 = np.array([6, 7, 8, 9, 10])\n",
        "\n",
        "# Multiplication\n",
        "multiplication = array1 * array2\n",
        "print(\"Multiplication:\", multiplication)\n",
        "\n",
        "# Division\n",
        "division = array1 / array2\n",
        "print(\"Division:\", division)\n",
        "\n",
        "# Power\n",
        "poweroff = np.power(array1, 2)\n",
        "print(\"Power of array1:\", poweroff)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GeuoHFOyJ6LO",
        "outputId": "926eb72e-1f9b-43ac-d343-1378658f32f4"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Multiplication: [ 6 14 24 36 50]\n",
            "Division: [0.16666667 0.28571429 0.375      0.44444444 0.5       ]\n",
            "Power of array1: [ 1  4  9 16 25]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Combining text with NumPy function\n",
        "text_output = f\"Addition of Two: {array1 + array2}\"\n",
        "print(text_output)\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oQeWnZmpJw-O",
        "outputId": "bd7fdfda-5ad5-48d9-cfd8-73d709773e4e"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Addition of Two: [ 7  9 11 13 15]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Applying np.sin()\n",
        "sin_values = np.sin(array1)\n",
        "print(\"Sine values:\", sin_values)\n",
        "\n",
        "# Applying np.log()\n",
        "log_values = np.log(array1)\n",
        "print(\"Log values:\", log_values)\n",
        "\n",
        "# Applying np.log2()\n",
        "log2_values = np.log2(array1)\n",
        "print(\"Log2 values:\", log2_values)\n",
        "\n",
        "# Applying np.exp()\n",
        "exp_values = np.exp(array1)\n",
        "print(\"Exponential values:\", exp_values)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8aOjBTksJ-p4",
        "outputId": "7e7c93af-e7a3-4ff4-e594-6da155e4c646"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Sine values: [ 0.84147098  0.90929743  0.14112001 -0.7568025  -0.95892427]\n",
            "Log values: [0.         0.69314718 1.09861229 1.38629436 1.60943791]\n",
            "Log2 values: [0.         1.         1.5849625  2.         2.32192809]\n",
            "Exponential values: [  2.71828183   7.3890561   20.08553692  54.59815003 148.4131591 ]\n"
          ]
        }
      ]
    }
  ]
}